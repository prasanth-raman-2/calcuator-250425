{"is_source_file": true, "format": "Java", "description": "This Java test source file contains unit tests for the class 'ArithmeticOperationsHandler' in the calculator project. It uses JUnit 5 and Mockito to mock dependencies and verify functionality related to digit input processing, operation handling, equals operation, clearing, backspaces, and some integration and performance tests.", "external_files": ["com/calculator/model/CalculationResult.java", "com/calculator/model/Operation.java", "com/calculator/state/CalculatorState.java", "com/calculator/state/CalculatorStateManager.java"], "external_methods": ["com/calculator.state.CalculatorStateManager.getState", "com/calculator.state.CalculatorStateManager.processDigit", "com/calculator.state.CalculatorStateManager.processOperation", "com/calculator.state.CalculatorStateManager.executeOperation", "com/calculator.state.CalculatorState.clear", "com/calculator.state.CalculatorState.getCurrentInput", "com/calculator.state.CalculatorState.setCurrentInput", "com/calculator.model.Operation.fromSymbol", "com/calculator.model.CalculationResult.success", "com/calculator.model.CalculationResult.error", "com/calculator.model.CalculationResult.isSuccess", "com/calculator.model.CalculationResult.getValue", "com/calculator.model.CalculationResult.getError"], "published": [], "classes": [{"name": "test_ArithmeticOperationsHandler", "description": "JUnit test class for 'ArithmeticOperationsHandler'."}], "methods": [{"name": "setUp", "description": "Initializes mocks and sets up common objects before each test."}, {"name": "processValidDigit", "description": "Tests processing a valid digit input."}, {"name": "processAllValidDigits", "description": "Parameterized test for processing all valid digits and decimal point."}, {"name": "processValidOperations", "description": "Parameterized test for processing valid operation symbols."}, {"name": "processInvalidOperation", "description": "Tests handling of an invalid operation symbol."}, {"name": "processEqualsSuccessful", "description": "Tests processing '=' when calculation is successful."}, {"name": "processEqualsError", "description": "Tests processing '=' when an error occurs during calculation."}, {"name": "clearCalculatorState", "description": "Tests the clear function."}, {"name": "backspaceMultipleDigits", "description": "Backspace test when multiple digits are present."}, {"name": "backspaceSingleDigit", "description": "Backspace test when a single digit is present, expecting reset to zero."}, {"name": "backspaceZero", "description": "Backspace test when current input is zero."}, {"name": "completeCalculationScenario", "description": "Integration test simulating a complete calculation sequence."}, {"name": "errorHandlingScenario", "description": "Integration test for handling calculation errors, such as division by zero."}, {"name": "rapidCalculationSequence", "description": "Performance test simulating rapid successive calculations."}], "calls": ["com/calculator.state.CalculatorStateManager.getState", "com/calculator.state.CalculatorStateManager.processDigit", "com/calculator.state.CalculatorStateManager.processOperation", "com/calculator.state.CalculatorStateManager.executeOperation", "com/calculator.state.CalculatorState.clear", "com/calculator.state.CalculatorState.getCurrentInput", "com/calculator.state.CalculatorState.setCurrentInput", "com/calculator.model.Operation.fromSymbol", "com/calculator.model.CalculationResult.success", "com/calculator.model.CalculationResult.error", "com/calculator.model.CalculationResult.isSuccess", "com/calculator.model.CalculationResult.getValue", "com/calculator.model.CalculationResult.getError"], "search-terms": ["ArithmeticOperationsHandler", "CalculatorState", "CalculatorStateManager", "JUnit", "Mockito", "unit tests", "digit processing", "operation handling", "equals operation", "clear", "backspace", "performance", "calculations"], "state": 2, "file_id": 47, "knowledge_revision": 96, "git_revision": "", "filename": "/home/kavia/workspace/calcuator-250425/src/test/java/com/calculator/handler/test_ArithmeticOperationsHandler.java", "hash": "c7018f2a7e2ef10f77e6679eaceb1742", "format-version": 4, "code-base-name": "default", "revision_history": [{"96": ""}]}