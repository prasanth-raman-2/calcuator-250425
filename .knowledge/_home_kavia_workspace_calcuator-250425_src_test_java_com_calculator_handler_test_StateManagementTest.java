{"is_source_file": true, "format": "Java", "description": "This is a test class for the Calculator State Management, using JUnit 5 and Mockito to test the behavior of CalculatorStateManager and related classes.", "external_files": ["com.calculator.model.Operation", "com.calculator.state.CalculatorState", "com.calculator.state.CalculatorStateManager", "com.calculator.service.CalculationService", "com.calculator.service.ValidationService"], "external_methods": ["com.calculator.state.CalculatorState.getFirstOperand", "com.calculator.state.CalculatorState.getSecondOperand", "com.calculator.state.CalculatorState.getCurrentOperation", "com.calculator.state.CalculatorState.isNewNumber", "com.calculator.state.CalculatorState.getCurrentInput", "com.calculator.state.CalculatorState.setFirstOperand", "com.calculator.state.CalculatorState.setCurrentOperation", "com.calculator.state.CalculatorState.setCurrentInput", "com.calculator.state.CalculatorState.setNewNumber", "com.calculator.state.CalculatorState.isNewNumber", "com.calculator.state.CalculatorState.getHistory", "com.calculator.state.CalculatorState.addToHistory", "com.calculator.state.CalculatorStateManager.getState", "com.calculator.state.CalculatorStateManager.clear", "com.calculator.state.CalculatorStateManager.processDigit", "com.calculator.state.CalculatorStateManager.processOperation", "com.calculator.state.CalculatorStateManager.executeOperation", "com.calculator.service.CalculationService.add", "com.calculator.service.CalculationService.multiply", "com.calculator.service.CalculationService.divide", "com.calculator.service.ValidationService.validateInput", "com.calculator.service.ValidationService.validateCalculation"], "published": ["com.calculator.handler.test_StateManagementTest"], "classes": [{"name": "test_StateManagementTest", "description": "JUnit test class for testing the CalculatorStateManager and associated classes, including state initialization, input processing, operation execution, history management, and error handling."}], "methods": [{"name": "setUp", "description": "Initializes mocks and the state manager before each test."}, {"name": "initialStateTest", "description": "Verifies the initial state values after initialization."}, {"name": "clearStateTest", "description": "Tests that the clear method resets the calculator state."}, {"name": "processFirstDigitTest", "description": "Tests processing a single digit input."}, {"name": "processMultipleDigitsTest", "description": "Tests processing multiple digit inputs."}, {"name": "processDecimalPointTest", "description": "Tests processing input with a decimal point."}, {"name": "processFirstOperationTest", "description": "Tests processing the first operation input."}, {"name": "processChainedOperationsTest", "description": "Tests processing chained operations and calculation."}, {"name": "addToHistoryTest", "description": "Verifies adding a calculation to the history log."}, {"name": "historySizeLimitTest", "description": "Ensures the history does not exceed the size limit."}, {"name": "handleInvalidNumberFormatTest", "description": "Tests handling of invalid number input."}, {"name": "handleDivisionByZeroTest", "description": "Tests error handling for division by zero."}], "calls": ["com.calculator.state.CalculatorState.getFirstOperand", "com.calculator.state.CalculatorState.getCurrentInput", "com.calculator.state.CalculatorState.setFirstOperand", "com.calculator.state.CalculatorState.setCurrentOperation", "com.calculator.state.CalculatorState.setCurrentInput", "com.calculator.state.CalculatorState.getHistory", "com.calculator.state.CalculatorState.addToHistory", "com.calculator.state.CalculatorStateManager.getState", "com.calculator.state.CalculatorStateManager.processDigit", "com.calculator.state.CalculatorStateManager.processOperation", "com.calculator.state.CalculatorStateManager.executeOperation", "com.calculator.service.CalculationService.add", "com.calculator.service.CalculationService.multiply", "com.calculator.service.ValidationService.validateInput", "com.calculator.service.ValidationService.validateCalculation"], "search-terms": ["JUnit", "CalculatorStateManager", "State Initialization", "Input Processing", "Operation Execution", "History Management", "Error Handling", "Mockito", "Mocked Services", "Unit Tests"], "state": 2, "file_id": 50, "knowledge_revision": 102, "git_revision": "", "filename": "/home/kavia/workspace/calcuator-250425/src/test/java/com/calculator/handler/test_StateManagementTest.java", "hash": "a181aa06bfc0a0452ec9eb9bf1a8ae65", "format-version": 4, "code-base-name": "default", "revision_history": [{"102": ""}]}